/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./context/TwitterContext.js":
/*!***********************************!*\
  !*** ./context/TwitterContext.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TwitterContext\": () => (/* binding */ TwitterContext),\n/* harmony export */   \"TwitterProvider\": () => (/* binding */ TwitterProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/client */ \"./lib/client.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_client__WEBPACK_IMPORTED_MODULE_3__]);\n_lib_client__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nconst TwitterContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst TwitterProvider = ({ children  })=>{\n    const [appStatus, setAppStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [currentUser, setCurrentUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [tweets, setTweets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkIfWalletIsConnected();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!currentAccount && appStatus == \"connected\") return;\n        getCurrentUserDetails(currentAccount);\n        fetchTweets();\n    }, [\n        currentAccount,\n        appStatus\n    ]);\n    /**\n   * Checks if there is an active wallet connection\n   */ const checkIfWalletIsConnected = async ()=>{\n        if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n        try {\n            const addressArray = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (addressArray.length > 0) {\n                setAppStatus(\"connected\");\n                setCurrentAccount(addressArray[0]);\n                createUserAccount(addressArray[0]);\n            } else {\n                router.push(\"/\");\n                setAppStatus(\"notConnected\");\n            }\n        } catch (err) {\n            router.push(\"/\");\n            setAppStatus(\"error\");\n        }\n    };\n    /**\n   * Initiates MetaMask wallet connection\n   */ const connectWallet = async ()=>{\n        if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n        try {\n            setAppStatus(\"loading\");\n            const addressArray = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            if (addressArray.length > 0) {\n                setCurrentAccount(addressArray[0]);\n                createUserAccount(addressArray[0]);\n            } else {\n                router.push(\"/\");\n                setAppStatus(\"notConnected\");\n            }\n        } catch (err) {\n            setAppStatus(\"error\");\n        }\n    };\n    /**\n   * Creates an account in Sanity DB if the user does not already have one\n   * @param {String} userAddress Wallet address of the currently logged in user\n   */ const createUserAccount = async (userAddress = currentAccount)=>{\n        if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n        try {\n            const userDoc = {\n                _type: \"users\",\n                _id: userAddress,\n                name: \"Unnamed\",\n                isProfileImageNft: false,\n                profileImage: \"https://about.twitter.com/content/dam/about-twitter/en/brand-toolkit/brand-download-img-1.jpg.twimg.1920.jpg\",\n                walletAddress: userAddress\n            };\n            await _lib_client__WEBPACK_IMPORTED_MODULE_3__.client.createIfNotExists(userDoc);\n            setAppStatus(\"connected\");\n        } catch (error) {\n            router.push(\"/\");\n            setAppStatus(\"error\");\n        }\n    };\n    /**\n   * Generates NFT profile picture URL or returns the image URL if it's not an NFT\n   * @param {String} imageUri If the user has minted a profile picture, an IPFS hash; if not then the URL of their profile picture\n   * @param {Boolean} isNft Indicates whether the user has minted a profile picture\n   * @returns A full URL to the profile picture\n   */ const getNftProfileImage = async (imageUri, isNft)=>{\n        if (isNft) {\n            return `https://gateway.pinata.cloud/ipfs/${imageUri}`;\n        } else if (!isNft) {\n            return imageUri;\n        }\n    };\n    /**\n   * Gets all the tweets stored in Sanity DB.\n   */ const fetchTweets = async ()=>{\n        const query = `\n      *[_type == \"tweets\"]{\n        \"author\": author->{name, walletAddress, profileImage, isProfileImageNft},\n        tweet,\n        timestamp\n      }|order(timestamp desc)\n    `;\n        // setTweets(await client.fetch(query))\n        const sanityResponse = await _lib_client__WEBPACK_IMPORTED_MODULE_3__.client.fetch(query);\n        setTweets([]);\n        /**\n     * Async await not available with for..of loops.\n     */ sanityResponse.forEach(async (item)=>{\n            const profileImageUrl = await getNftProfileImage(item.author.profileImage, item.author.isProfileImageNft);\n            if (item.author.isProfileImageNft) {\n                const newItem = {\n                    tweet: item.tweet,\n                    timestamp: item.timestamp,\n                    author: {\n                        name: item.author.name,\n                        walletAddress: item.author.walletAddress,\n                        profileImage: profileImageUrl,\n                        isProfileImageNft: item.author.isProfileImageNft\n                    }\n                };\n                setTweets((prevState)=>[\n                        ...prevState,\n                        newItem\n                    ]);\n            } else {\n                setTweets((prevState)=>[\n                        ...prevState,\n                        item\n                    ]);\n            }\n        });\n    };\n    /**\n   * Gets the current user details from Sanity DB.\n   * @param {String} userAccount Wallet address of the currently logged in user\n   * @returns null\n   */ const getCurrentUserDetails = async (userAccount = currentAccount)=>{\n        if (appStatus !== \"connected\") return;\n        const query = `\n      *[_type == \"users\" && _id == \"${userAccount}\"]{\n        \"tweets\": tweets[]->{timestamp, tweet}|order(timestamp desc),\n        name,\n        profileImage,\n        isProfileImageNft,\n        coverImage,\n        walletAddress\n      }\n    `;\n        const response = await _lib_client__WEBPACK_IMPORTED_MODULE_3__.client.fetch(query);\n        const profileImageUri = await getNftProfileImage(response[0].profileImage, response[0].isProfileImageNft);\n        setCurrentUser({\n            tweets: response[0].tweets,\n            name: response[0].name,\n            profileImage: profileImageUri,\n            walletAddress: response[0].walletAddress,\n            coverImage: response[0].coverImage,\n            isProfileImageNft: response[0].isProfileImageNft\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TwitterContext.Provider, {\n        value: {\n            appStatus,\n            currentAccount,\n            connectWallet,\n            tweets,\n            fetchTweets,\n            setAppStatus,\n            getNftProfileImage,\n            currentUser,\n            getCurrentUserDetails\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/upendra/Desktop/developer/blockchain/cleverProgrammer/cleverProgrammer/twitterWeb3/twitterWEB3final/twitter-clone-blockchain/client/context/TwitterContext.js\",\n        lineNumber: 194,\n        columnNumber: 5\n    }, undefined);\n} // import { createContext, useEffect, useState } from \"react\";\n // import { useRouter } from \"next/router\";\n // import { client } from \"../lib/client\";\n // export const TwitterContext = createContext();\n // export const TwitterProvider = ({ children }) => {\n //   const [appStatus, setAppStatus] = useState(\"\");\n //   const [currentAccount, setCurrentAccount] = useState(\"\");\n //   //   const [currentUser, setCurrentUser] = useState({});\n //   const [tweets, setTweets] = useState([]);\n //   const router = useRouter();\n //   useEffect(() => {\n //     checkIfWalletIsConnected();\n //   }, []);\n //     useEffect(() => {\n //       if (!currentAccount && appStatus == \"connected\") return;\n //       getCurrentUserDetails(currentAccount);\n //       //   fetchTweets();\n //     }, [currentAccount, appStatus]);\n //   /**\n //    * Checks if there is an active wallet connection\n //    */\n //   const checkIfWalletIsConnected = async () => {\n //     if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n //     try {\n //       const addressArray = await window.ethereum.request({\n //         method: \"eth_accounts\",\n //       });\n //       if (addressArray.length > 0) {\n //         setAppStatus(\"connected\");\n //         setCurrentAccount(addressArray[0]);\n //         createUserAccount(addressArray[0]);\n //       } else {\n //         router.push(\"/\");\n //         setAppStatus(\"notConnected\");\n //       }\n //     } catch (err) {\n //       router.push(\"/\");\n //       // setAppStatus(\"error\");\n //       setAppStatus(\"connected\");\n //     }\n //   };\n //   /**\n //    * Initiates MetaMask wallet connection\n //    */\n //   const connectToWallet = async () => {\n //     if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n //     try {\n //       setAppStatus(\"loading\");\n //       const addressArray = await window.ethereum.request({\n //         method: \"eth_requestAccounts\",\n //       });\n //       if (addressArray.length > 0) {\n //         setCurrentAccount(addressArray[0]);\n //         createUserAccount(addressArray[0]);\n //       } else {\n //         router.push(\"/\");\n //         setAppStatus(\"notConnected\");\n //       }\n //     } catch (err) {\n //       // setAppStatus(\"error\");\n //       setAppStatus(\"connected\");\n //     }\n //   };\n //   /**\n //    * Creates an account in Sanity DB if the user does not already have one\n //    * @param {String} userAddress Wallet address of the currently logged in user\n //    */\n //   const createUserAccount = async (userAddress = currentAccount) => {\n //     if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n //     try {\n //       const userDoc = {\n //         _type: \"users\",\n //         _id: userAddress,\n //         name: \"Unnamed\",\n //         isProfileImageNft: false,\n //         profileImage:\n //           \"https://about.twitter.com/content/dam/about-twitter/en/brand-toolkit/brand-download-img-1.jpg.twimg.1920.jpg\",\n //         walletAddress: userAddress,\n //       };\n //       await client.createIfNotExists(userDoc);\n //       setAppStatus(\"connected\");\n //     } catch (error) {\n //       router.push(\"/\");\n //       setAppStatus(\"connected\");\n //       // setAppStatus(\"error\");\n //     }\n //   };\n //   //   /**\n //   //    * Generates NFT profile picture URL or returns the image URL if it's not an NFT\n //   //    * @param {String} imageUri If the user has minted a profile picture, an IPFS hash; if not then the URL of their profile picture\n //   //    * @param {Boolean} isNft Indicates whether the user has minted a profile picture\n //   //    * @returns A full URL to the profile picture\n //   //    */\n //   //   const getNftProfileImage = async (imageUri, isNft) => {\n //   //     if (isNft) {\n //   //       return `https://gateway.pinata.cloud/ipfs/${imageUri}`;\n //   //     } else if (!isNft) {\n //   //       return imageUri;\n //   //     }\n //   //   };\n //   /**\n //    * Gets all the tweets stored in Sanity DB.\n //    */\n //   const fetchTweets = async () => {\n //     const query = `\n //         *[_type == \"tweets\"]{\n //           \"author\": author->{name, walletAddress, profileImage, isProfileImageNft},\n //           tweet,\n //           timestamp\n //         }|order(timestamp desc)\n //       `;\n //     setTweets(await client.fetch(query));\n //     const sanityResponse = await client.fetch(query);\n //     setTweets([]);\n //     /**\n //      * Async await not available with for..of loops.\n //      */\n //     sanityResponse.forEach(async (item) => {\n //       const profileImageUrl = await getNftProfileImage(\n //         item.author.profileImage,\n //         item.author.isProfileImageNft\n //       );\n //       if (item.author.isProfileImageNft) {\n //         const newItem = {\n //           tweet: item.tweet,\n //           timestamp: item.timestamp,\n //           author: {\n //             name: item.author.name,\n //             walletAddress: item.author.walletAddress,\n //             profileImage: profileImageUrl,\n //             isProfileImageNft: item.author.isProfileImageNft,\n //           },\n //         };\n //         setTweets((prevState) => [...prevState, newItem]);\n //       } else {\n //         setTweets((prevState) => [...prevState, item]);\n //       }\n //     });\n //   };\n //   /**\n //    * Gets the current user details from Sanity DB.\n //    * @param {String} userAccount Wallet address of the currently logged in user\n //    * @returns null\n //    */\n //   const getCurrentUserDetails = async (userAccount = currentAccount) => {\n //     if (appStatus !== \"connected\") return;\n //     const query = `\n //         *[_type == \"users\" && _id == \"${userAccount}\"]{\n //           \"tweets\": tweets[]->{timestamp, tweet}|order(timestamp desc),\n //           name,\n //           profileImage,\n //           isProfileImageNft,\n //           coverImage,\n //           walletAddress\n //         }\n //       `;\n //     const response = await client.fetch(query);\n //     const profileImageUri = await getNftProfileImage(\n //       response[0].profileImage,\n //       response[0].isProfileImageNft\n //     );\n //     setCurrentUser({\n //       tweets: response[0].tweets,\n //       name: response[0].name,\n //       profileImage: profileImageUri,\n //       walletAddress: response[0].walletAddress,\n //       coverImage: response[0].coverImage,\n //       isProfileImageNft: response[0].isProfileImageNft,\n //     });\n //   };\n //   return (\n //     <TwitterContext.Provider\n //       value={{\n //         appStatus,\n //         currentAccount,\n //         connectToWallet,\n //         fetchTweets,\n //         tweets,\n //         currentUser,\n //         setAppStatus,\n //         getCurrentUserDetails,\n //       }}\n //     >\n //       {children}\n //     </TwitterContext.Provider>\n //   );\n // };\n //env local\n // API Key: 08821373aa37d0a7e70b\n //  API Secret: ed57322793132497cecce79e24b2acd2b77360199fcd84a67c53eb75efda235d\n //  JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiI3MDFjMTRiNi0yMWVhLTRjOTEtOGMzNy0wMTFhNjk4ODllOTQiLCJlbWFpbCI6ImRldmVsb3BlcnVqQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiIwODgyMTM3M2FhMzdkMGE3ZTcwYiIsInNjb3BlZEtleVNlY3JldCI6ImVkNTczMjI3OTMxMzI0OTdjZWNjZTc5ZTI0YjJhY2QyYjc3MzYwMTk5ZmNkODRhNjdjNTNlYjc1ZWZkYTIzNWQiLCJpYXQiOjE2ODI3OTM2MTd9.vy7HkCS3sAAKWoq2yN7PsR1_Ab8BvktPLSfG8P0kKls\n;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/TwitterContext.js\n");

/***/ }),

/***/ "./lib/client.js":
/*!***********************!*\
  !*** ./lib/client.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"client\": () => (/* binding */ client)\n/* harmony export */ });\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/client */ \"@sanity/client\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sanity_client__WEBPACK_IMPORTED_MODULE_0__]);\n_sanity_client__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst client = (0,_sanity_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    // projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n    projectId: \"chatobam\",\n    dataset: \"production\",\n    apiVersion: \"v1\",\n    token: \"skC4wsahF0q3VUCDBai42IgermODBB0rMqZmtrvpL8M8lCPt9gmnmTb931ZhOcMeHgCfbcaIf2oe5N7DUsa4ZHwmOKmQYWzYRspgVE6LpZZtz33LbqLTyoYYLOwb6GHEzwfb5rh7fmPLU1u6HMwQ0LHCaxI34cyWsIHv3tCq9V1YkSkxFx22\",\n    useCdn: false\n}); //NEXT_PUBLIC_SANITY_PROJECT_ID=chatobam// projectId: \"chatobam\",\n //NEXT_PUBLIC_SANITY_PROJECT_ID=chatobam\n // skC4wsahF0q3VUCDBai42IgermODBB0rMqZmtrvpL8M8lCPt9gmnmTb931ZhOcMeHgCfbcaIf2oe5N7DUsa4ZHwmOKmQYWzYRspgVE6LpZZtz33LbqLTyoYYLOwb6GHEzwfb5rh7fmPLU1u6HMwQ0LHCaxI34cyWsIHv3tCq9V1YkSkxFx22\n //c: process.env.NEXT_PUBLIC_SANITY_TOKEN,\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBDO0FBRW5DLE1BQU1DLFNBQVNELDBEQUFZQSxDQUFDO0lBQ2pDLHdEQUF3RDtJQUN4REUsV0FBVztJQUNYQyxTQUFTO0lBQ1RDLFlBQVk7SUFDWkMsT0FBTztJQUNQQyxRQUFRLEtBQUs7QUFDZixHQUFHLENBRUgsaUVBQWlFO0NBQ2pFLHdDQUF3QztDQUV4Qyx1TEFBdUw7Q0FDdkwsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbGliL2NsaWVudC5qcz9lNjlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzYW5pdHlDbGllbnQgZnJvbSBcIkBzYW5pdHkvY2xpZW50XCI7XG5cbmV4cG9ydCBjb25zdCBjbGllbnQgPSBzYW5pdHlDbGllbnQoe1xuICAvLyBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NBTklUWV9QUk9KRUNUX0lELFxuICBwcm9qZWN0SWQ6IFwiY2hhdG9iYW1cIixcbiAgZGF0YXNldDogXCJwcm9kdWN0aW9uXCIsXG4gIGFwaVZlcnNpb246IFwidjFcIixcbiAgdG9rZW46IFwic2tDNHdzYWhGMHEzVlVDREJhaTQySWdlcm1PREJCMHJNcVptdHJ2cEw4TThsQ1B0OWdtbm1UYjkzMVpoT2NNZUhnQ2ZiY2FJZjJvZTVON0RVc2E0Wkh3bU9LbVFZV3pZUnNwZ1ZFNkxwWlp0ejMzTGJxTFR5b1lZTE93YjZHSEV6d2ZiNXJoN2ZtUExVMXU2SE13UTBMSENheEkzNGN5V3NJSHYzdENxOVYxWWtTa3hGeDIyXCIsXG4gIHVzZUNkbjogZmFsc2UsXG59KTtcblxuLy9ORVhUX1BVQkxJQ19TQU5JVFlfUFJPSkVDVF9JRD1jaGF0b2JhbS8vIHByb2plY3RJZDogXCJjaGF0b2JhbVwiLFxuLy9ORVhUX1BVQkxJQ19TQU5JVFlfUFJPSkVDVF9JRD1jaGF0b2JhbVxuXG4vLyBza0M0d3NhaEYwcTNWVUNEQmFpNDJJZ2VybU9EQkIwck1xWm10cnZwTDhNOGxDUHQ5Z21ubVRiOTMxWmhPY01lSGdDZmJjYUlmMm9lNU43RFVzYTRaSHdtT0ttUVlXellSc3BnVkU2THBaWnR6MzNMYnFMVHlvWVlMT3diNkdIRXp3ZmI1cmg3Zm1QTFUxdTZITXdRMExIQ2F4STM0Y3lXc0lIdjN0Q3E5VjFZa1NreEZ4MjJcbi8vYzogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0FOSVRZX1RPS0VOLCJdLCJuYW1lcyI6WyJzYW5pdHlDbGllbnQiLCJjbGllbnQiLCJwcm9qZWN0SWQiLCJkYXRhc2V0IiwiYXBpVmVyc2lvbiIsInRva2VuIiwidXNlQ2RuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_TwitterContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/TwitterContext */ \"./context/TwitterContext.js\");\n/* harmony import */ var _lib_hexStyles_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/hexStyles.css */ \"./lib/hexStyles.css\");\n/* harmony import */ var _lib_hexStyles_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_lib_hexStyles_css__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_context_TwitterContext__WEBPACK_IMPORTED_MODULE_2__]);\n_context_TwitterContext__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n//import type { AppProps } from \"next/app\";\n\n\nfunction MyApp({ Component , pageProps  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_TwitterContext__WEBPACK_IMPORTED_MODULE_2__.TwitterProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n            ...pageProps\n        }, void 0, false, {\n            fileName: \"/Users/upendra/Desktop/developer/blockchain/cleverProgrammer/cleverProgrammer/twitterWeb3/twitterWEB3final/twitter-clone-blockchain/client/pages/_app.js\",\n            lineNumber: 9,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/upendra/Desktop/developer/blockchain/cleverProgrammer/cleverProgrammer/twitterWeb3/twitterWEB3final/twitter-clone-blockchain/client/pages/_app.js\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUErQjtBQUMvQiwyQ0FBMkM7QUFDaUI7QUFDOUI7QUFFOUIsU0FBU0MsTUFBTSxFQUFFQyxVQUFTLEVBQUVDLFVBQVMsRUFBRSxFQUFFO0lBQ3ZDLHFCQUNFLDhEQUFDSCxvRUFBZUE7a0JBQ2QsNEVBQUNFO1lBQVcsR0FBR0MsU0FBUzs7Ozs7Ozs7Ozs7QUFHOUI7QUFFQSxpRUFBZUYsS0FBS0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi9zdHlsZXMvZ2xvYmFscy5jc3NcIjtcbi8vaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gXCJuZXh0L2FwcFwiO1xuaW1wb3J0IHsgVHdpdHRlclByb3ZpZGVyIH0gZnJvbSBcIi4uL2NvbnRleHQvVHdpdHRlckNvbnRleHRcIjtcbmltcG9ydCBcIi4uL2xpYi9oZXhTdHlsZXMuY3NzXCI7XG5cbmZ1bmN0aW9uIE15QXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkge1xuICByZXR1cm4gKFxuICAgIDxUd2l0dGVyUHJvdmlkZXI+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgPC9Ud2l0dGVyUHJvdmlkZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwO1xuIl0sIm5hbWVzIjpbIlR3aXR0ZXJQcm92aWRlciIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./lib/hexStyles.css":
/*!***************************!*\
  !*** ./lib/hexStyles.css ***!
  \***************************/
/***/ (() => {



/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "@sanity/client":
/*!*********************************!*\
  !*** external "@sanity/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = import("@sanity/client");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.js"));
module.exports = __webpack_exports__;

})();